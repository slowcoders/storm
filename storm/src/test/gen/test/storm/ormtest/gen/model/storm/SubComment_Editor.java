
package test.storm.ormtest.gen.model.storm;

import java.sql.SQLException;

import org.slowcoders.storm.*;

import test.storm.ormtest.schema.*;
import test.storm.ormtest.gen.model.*;
import java.lang.String;

/**
This file is generated by Storm Generator.
Do not modify this file.
*/

public abstract class SubComment_Editor extends EntityEditor implements SubComment_ORM, IxSubComment.UpdateForm {

	private static final _TableBase.Initializer unsafeTools = _TableBase.initializer;

	static final IxSubComment ghost = _TableBase.tSubComment.createGhostRef();

	protected SubComment_Editor(SubComment_Table table, SubComment_Snapshot origin) {
		super(table, origin);
	}

	public final SubComment_Table getTable() {
		return (SubComment_Table)super.getTable();
	}

	public final IxSubComment getEntityReference() {
		return (IxSubComment)super.getEntityReference_internal();
	}

	public final IxSubComment.Snapshot getOriginalData() {
		return (IxSubComment.Snapshot)super.getOriginalData_internal();
	}

	public final IxComment getComment() {
		Comment_ORM v = (Comment_ORM) super.getObjectValue(SubComment_ORM.Comment);
		return v == null ? null : (IxComment)v.getEntityReference();
	}

	public final void setComment(Comment_ORM v) {
		super.setFieldValue(SubComment_ORM.Comment, v);
	}

	public final String getText() {
		String v = (String) super.getObjectValue(SubComment_ORM.Text);
		return v;
	}

	public final void setText(String v) {
		super.setFieldValue(SubComment_ORM.Text, v);
	}

	public final String getUser() {
		String v = (String) super.getObjectValue(SubComment_ORM.User);
		return v;
	}

	public final void setUser(String v) {
		super.setFieldValue(SubComment_ORM.User, v);
	}

	public IxSubComment save() throws SQLException, RuntimeException {
		return (IxSubComment)super.doSave(false);
	}

	public IxSubComment saveAndContinueEdit() throws SQLException, RuntimeException {
		return (IxSubComment)super.doSave(true);
	}

	protected void onSave_inTR() throws SQLException, RuntimeException {
		super.__saveForeignEntityInternal((Comment_ORM) super.getObjectValue(SubComment_ORM.Comment));

		if (this.isChanged()) {
			super.onSave_inTR();
		}

	}

	protected void validate_inTR() throws RuntimeException {
		super.validate_inTR();
		ensureNotNull(SubComment_ORM.Comment);
	}

	public void _set(IxSubComment_.UpdateForm data) {
		setText(data.getText());
		setUser(data.getUser());
	}

}

