
package test.storm.ormtest.gen.model.storm;

import java.sql.SQLException;

import org.slowcoders.storm.*;

import test.storm.ormtest.schema.*;
import test.storm.ormtest.gen.model.*;
import java.util.List;
import java.lang.String;

/**
This file is generated by Storm Generator.
Do not modify this file.
*/

public abstract class Comment_Editor extends EntityEditor implements Comment_ORM, IxComment.UpdateForm {

	private static final _TableBase.Initializer unsafeTools = _TableBase.initializer;

	static final IxComment ghost = _TableBase.tComment.createGhostRef();

	/*internal*/ EditableEntities<IxSubComment.UpdateForm, IxSubComment.Editor> _subComments;

	protected Comment_Editor(Comment_Table table, Comment_Snapshot origin) {
		super(table, origin);
	}

	public final Comment_Table getTable() {
		return (Comment_Table)super.getTable();
	}

	public final IxComment getEntityReference() {
		return (IxComment)super.getEntityReference_internal();
	}

	public final IxComment.Snapshot getOriginalData() {
		return (IxComment.Snapshot)super.getOriginalData_internal();
	}

	public final IxPost getPost() {
		Post_ORM v = (Post_ORM) super.getObjectValue(Comment_ORM.Post);
		return v == null ? null : (IxPost)v.getEntityReference();
	}

	public final void setPost(Post_ORM v) {
		super.setFieldValue(Comment_ORM.Post, v);
	}

	public final String getText() {
		String v = (String) super.getObjectValue(Comment_ORM.Text);
		return v;
	}

	public final void setText(String v) {
		super.setFieldValue(Comment_ORM.Text, v);
	}

	public final IxUser getUser() {
		User_ORM v = (User_ORM) super.getObjectValue(Comment_ORM.User);
		return v == null ? null : (IxUser)v.getEntityReference();
	}

	public final void setUser(User_ORM v) {
		super.setFieldValue(Comment_ORM.User, v);
	}

	public final EditableEntities<IxSubComment.UpdateForm, IxSubComment.Editor> editSubComments() {
		if (this._subComments == null) {
			Comment_Snapshot org = this.getOriginalData();
			List<? extends SubComment_ORM> items = org == null ? null : org.getSubComments();
			this._subComments = new EditableEntities<>(items);
			super.setFieldValue(Comment_ORM.SubComments, this._subComments);
		}
		return this._subComments;
	}

	public final List<IxSubComment.UpdateForm> getSubComments() {
		return this.editSubComments();
	}

	public IxComment save() throws SQLException, RuntimeException {
		return (IxComment)super.doSave(false);
	}

	public IxComment saveAndContinueEdit() throws SQLException, RuntimeException {
		return (IxComment)super.doSave(true);
	}

	protected void onSave_inTR() throws SQLException, RuntimeException {
		super.__saveForeignEntityInternal((Post_ORM) super.getObjectValue(Comment_ORM.Post));

		if (this.isChanged()) {
			super.__saveJoinedEntityInternal((User_ORM) super.getObjectValue(Comment_ORM.User));

			super.onSave_inTR();
		}

		super.__saveJoinedEntitiesInternal(this._subComments, _TableBase.tSubComment.findByComment(this));
	}

	protected void validate_inTR() throws RuntimeException {
		super.validate_inTR();
		ensureNotNull(Comment_ORM.Post);
		ensureNotNull(Comment_ORM.User);
	}

	public void _set(IxComment_.UpdateForm data) {
		setText(data.getText());
		setUser((IxUser)data.getUser());
		if (data.getSubComments() != null) {
			editSubComments().replaceAll(data.getSubComments());
		}
	}

}

