
package org.slowcoders.sample.orm.gen.storm;

import static org.slowcoders.storm.orm.ORMFlags.*;
import java.sql.SQLException;
import java.util.*;
import com.google.common.collect.*;
import org.slowcoders.util.*;
import org.slowcoders.storm.*;
import org.slowcoders.storm.orm.*;
import org.slowcoders.storm.util.*;
import org.slowcoders.io.serialize.*;
import org.slowcoders.observable.*;

import org.slowcoders.sample.orm.def.*;
import org.slowcoders.sample.orm.gen.*;
import java.util.List;
import org.slowcoders.sample.orm.def.User_ORM;
import org.slowcoders.sample.orm.def.User_ORM;
import java.lang.String;

/**
This file is generated by Storm Generator.
Do not modify this file.
*/

public abstract class User_Reference extends EntityReference implements User_ORM {

	private static final _TableBase.Initializer unsafeTools = _TableBase.initializer;

	/*internal*/ final Post_Table.RowSet _posts;

	/*internal*/ IxPhoto _photo;

	/*internal*/ IxDescription _description;

	public static abstract class Editor extends User_Editor {
		protected Editor(User_Table table, User_Snapshot origin) {
			super(table, origin);
		}

	}
	protected User_Reference(long id) {
		super(id);
		this._posts = _TableBase.tPost.findByUser(this);
	}

	public final User_Table getTable() {
		return _TableBase.tUser;
	}

	public final IxUser.Snapshot tryLoadSnapshot() {
		return (IxUser.Snapshot)super.doTryLoadSnapshot();
	}

	public final IxUser.Snapshot loadSnapshot() {
		return (IxUser.Snapshot)super.doLoadSnapshot();
	}

	public final Post_Table.RowSet getPosts() {
		Post_Table.RowSet res = _posts;
		return res;
	}

	public final IxPhoto getPhoto() {
		IxPhoto res = _photo;
		if (res == null) {
			res = _TableBase.tPhoto.findEntityReference(this.getEntityId(), false);
			if (res == null) res = Photo_Editor.ghost;
			_photo = res;
		}
		return res == Photo_Editor.ghost ? null : res;
	}

	public final IxDescription getDescription() {
		IxDescription res = _description;
		if (res == null) {
			res = _TableBase.tDescription.findByUser(this);
			if (res == null) res = Description_Editor.ghost;
			_description = res;
		}
		return res == Description_Editor.ghost ? null : res;
	}

	public void deleteEntity() throws SQLException {
		super.doDelete();
	}

	/****************************************/
	/*  Internal methods                    */
	/*--------------------------------------*/

	protected void onDelete_inTR() throws SQLException {
		onDelete_inTR(this.getPosts());
		onDelete_inTR(this.getPhoto());
		onDelete_inTR(this.getDescription());
		super.onDelete_inTR();
	}

	protected final void validateForeignKey_RT(EntitySnapshot entity) {
		IxUser.Snapshot d = (IxUser.Snapshot)entity;
	}

	final boolean __invalidatePhoto() {
		if (_photo == Photo_Editor.ghost) _photo = null;
		EntitySnapshot data = super.invalidateEntityCache_RT(ChangeType.OuterLinkChanged);
		if (data != null) {
			((IxUser.Snapshot)data).getPhoto();
			return true;
		}
		return false;
	}

}
