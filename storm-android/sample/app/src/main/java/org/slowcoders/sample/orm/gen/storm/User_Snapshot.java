
package org.slowcoders.sample.orm.gen.storm;

import static org.slowcoders.storm.orm.ORMFlags.*;
import java.sql.SQLException;
import java.util.*;
import com.google.common.collect.*;
import org.slowcoders.util.*;
import org.slowcoders.storm.*;
import org.slowcoders.storm.orm.*;
import org.slowcoders.storm.util.*;
import org.slowcoders.io.serialize.*;
import org.slowcoders.observable.*;

import org.slowcoders.sample.orm.def.*;
import org.slowcoders.sample.orm.gen.*;
import java.util.List;
import org.slowcoders.sample.orm.def.User_ORM;
import org.slowcoders.sample.orm.def.User_ORM;
import java.lang.String;

/**
This file is generated by Storm Generator.
Do not modify this file.
*/

public abstract class User_Snapshot extends EntitySnapshot implements IxUser.UpdateForm, User_ORM {

	private static final _TableBase.Initializer unsafeTools = _TableBase.initializer;

	/*internal*/ String _emailAddress;

	/*internal*/ String _name;

	/*internal*/ User_ORM.UserGender _gender;

	/*internal*/ Set<User_ORM.Interest> _interests;

	/*internal*/ Photo_ORM _photo;

	protected User_Snapshot(IxUser ref) {
		super(ref);
	}

	public final String getEmailAddress() {
		return this._emailAddress;
	}

	public final String getName() {
		return this._name;
	}

	public final ImmutableList<IxPost> getPosts() {
		IxUser ref = this.getEntityReference();
		return (ref == null) ? null : ref.getPosts().selectEntities();
	}

	public final ImmutableList<IxPost.Snapshot> peekPosts() {
		IxUser ref = this.getEntityReference();
		return ref == null ? null : ref.getPosts().loadEntities();
	}

	public final User_ORM.UserGender getGender() {
		return this._gender;
	}

	public final ImmutableSet<User_ORM.Interest> getInterests() {
		return (ImmutableSet<User_ORM.Interest>)this._interests;
	}

	public final boolean getInterests_Food() {
		return getInterests().contains(User_ORM.Interest.Food);
	}

	public final boolean getInterests_Sports() {
		return getInterests().contains(User_ORM.Interest.Sports);
	}

	public final boolean getInterests_Travel() {
		return getInterests().contains(User_ORM.Interest.Travel);
	}

	public final boolean getInterests_Book() {
		return getInterests().contains(User_ORM.Interest.Book);
	}

	public final IxPhoto.Snapshot getPhoto() {
		if (this._photo == null) /***/{
			IxPhoto ref = getEntityReference().getPhoto();
			if (ref != null) {
				this._photo = ref.loadSnapshot();
			}
		}
		return (IxPhoto.Snapshot)this._photo;
	}

	public final IxDescription getDescription() {
		IxUser ref = this.getEntityReference();
		return (ref == null) ? null : ref.getDescription();
	}

	/****************************************/
	/*  Internal methods                    */
	/*--------------------------------------*/

	public final IxUser.Snapshot getOriginalData() {
		return (IxUser.Snapshot)this;
	}

	public IxUser.Editor editEntity() {
		return getTable().edit(this);
	}

	public final User_Table getTable() {
		return _TableBase.tUser;
	}

	public final IxUser getEntityReference() {
		return (IxUser)super.getReference_internal();
	}

	protected void ensureLoadSubSnapshot() {
		super.ensureLoadSubSnapshot();
		this.getPhoto();
	}

}

