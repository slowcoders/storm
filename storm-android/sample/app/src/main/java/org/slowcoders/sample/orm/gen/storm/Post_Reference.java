
package org.slowcoders.sample.orm.gen.storm;

import static org.slowcoders.storm.orm.ORMFlags.*;
import java.sql.SQLException;
import java.util.*;
import com.google.common.collect.*;
import org.slowcoders.util.*;
import org.slowcoders.storm.*;
import org.slowcoders.storm.orm.*;
import org.slowcoders.storm.util.*;
import org.slowcoders.io.serialize.*;
import org.slowcoders.observable.*;

import org.slowcoders.sample.orm.def.*;
import org.slowcoders.sample.orm.gen.*;
import java.util.List;
import org.joda.time.DateTime;
import java.lang.String;
import org.joda.time.LocalDateTime;

/**
This file is generated by Storm Generator.
Do not modify this file.
*/

public abstract class Post_Reference extends EntityReference implements Post_ORM {

	private static final _TableBase.Initializer unsafeTools = _TableBase.initializer;

	IxUser _user;

	/*internal*/ IxBody _body;

	/*internal*/ final Comment_Table.RowSet _comments;

	/*internal*/ final Like_Table.RowSet _likes;

	public static abstract class Editor extends Post_Editor {
		protected Editor(Post_Table table, Post_Snapshot origin) {
			super(table, origin);
		}

	}
	protected Post_Reference(long id) {
		super(id);
		this._comments = _TableBase.tComment.findByPost(this);
		this._likes = _TableBase.tLike.findByPost(this);
	}

	public final Post_Table getTable() {
		return _TableBase.tPost;
	}

	public final IxPost.Snapshot tryLoadSnapshot() {
		return (IxPost.Snapshot)super.doTryLoadSnapshot();
	}

	public final IxPost.Snapshot loadSnapshot() {
		return (IxPost.Snapshot)super.doLoadSnapshot();
	}

	public final IxUser getUser() {
		doLoadForeignKeys();
		return this._user;
	}

	public final IxBody getBody() {
		IxBody res = _body;
		if (res == null) {
			res = _TableBase.tBody.findByPost(this);
			if (DebugUtil.DEBUG) Debug.Assert(res != null);
			_body = res;
		}
		return res;
	}

	public final Comment_Table.RowSet getComments() {
		Comment_Table.RowSet res = _comments;
		return res;
	}

	public final Like_Table.RowSet getLikes() {
		Like_Table.RowSet res = _likes;
		return res;
	}

	public void deleteEntity() throws SQLException {
		super.doDelete();
	}

	/****************************************/
	/*  Internal methods                    */
	/*--------------------------------------*/

	protected void onDelete_inTR() throws SQLException {
		onDelete_inTR(this.getBody());
		onDelete_inTR(this.getComments());
		onDelete_inTR(this.getLikes());
		super.onDelete_inTR();
	}

	protected final void validateForeignKey_RT(EntitySnapshot entity) {
		IxPost.Snapshot d = (IxPost.Snapshot)entity;
		if (DebugUtil.DEBUG) DebugUtil.assertNullOrMatch(this._user, d.getUser());
		this._user = d.getUser();

	}

	final boolean __invalidateBody() {
		EntitySnapshot data = super.invalidateEntityCache_RT(ChangeType.OuterLinkChanged);
		if (data != null) {
			((IxPost.Snapshot)data).getBody();
			return true;
		}
		return false;
	}

	final boolean __invalidateComments() {
		EntitySnapshot data = super.invalidateEntityCache_RT(ChangeType.OuterLinkChanged);
		if (data != null) {
			((IxPost.Snapshot)data).getComments();
			return true;
		}
		return false;
	}

}
