
package org.slowcoders.sample.orm.gen.storm;

import static org.slowcoders.storm.orm.ORMFlags.*;
import java.sql.SQLException;
import java.util.*;
import com.google.common.collect.*;
import org.slowcoders.util.*;
import org.slowcoders.storm.*;
import org.slowcoders.storm.orm.*;
import org.slowcoders.storm.util.*;
import org.slowcoders.io.serialize.*;
import org.slowcoders.observable.*;

import org.slowcoders.sample.orm.def.*;
import org.slowcoders.sample.orm.gen.*;
import java.lang.String;

/**
This file is generated by Storm Generator.
Do not modify this file.
*/

public abstract class Description_Editor extends EntityEditor implements Description_ORM, IxDescription.UpdateForm {

	private static final _TableBase.Initializer unsafeTools = _TableBase.initializer;

	static final IxDescription ghost = _TableBase.tDescription.createGhostRef();

	protected Description_Editor(Description_Table table, Description_Snapshot origin) {
		super(table, origin);
	}

	public final Description_Table getTable() {
		return (Description_Table)super.getTable();
	}

	public final IxDescription getEntityReference() {
		return (IxDescription)super.getEntityReference_internal();
	}

	public final IxDescription.Snapshot getOriginalData() {
		return (IxDescription.Snapshot)super.getOriginalData_internal();
	}

	public final IxUser getUser() {
		User_ORM v = (User_ORM) super.getObjectValue(Description_ORM.User);
		return v == null ? null : (IxUser)v.getEntityReference();
	}

	final void __setUser(User_ORM subEdit) {
		User_ORM v = (User_ORM) super.getObjectValue(Description_ORM.User);
		Debug.Assert(v == null || v.getEntityReference() == subEdit.getEntityReference());
		super.setFieldValue(Description_ORM.User, subEdit);
	}

	public final String getText() {
		String v = (String) super.getObjectValue(Description_ORM.Text);
		return v;
	}

	public final void setText(String v) {
		super.setFieldValue(Description_ORM.Text, v);
	}

	public IxDescription save() throws SQLException, RuntimeException {
		return (IxDescription)super.doSave(false);
	}

	public IxDescription saveAndContinueEdit() throws SQLException, RuntimeException {
		return (IxDescription)super.doSave(true);
	}

	protected void onSave_inTR() throws SQLException, RuntimeException {
		super.__saveForeignEntityInternal((User_ORM) super.getObjectValue(Description_ORM.User));

		if (this.isChanged()) {
			super.onSave_inTR();
		}

	}

	protected void validate_inTR() throws RuntimeException {
		super.validate_inTR();
		ensureNotNull(Description_ORM.User);
	}

	public void _set(IxDescription_.UpdateForm data) {
		setText(data.getText());
	}

}

